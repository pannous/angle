!!python/object/apply:collections.defaultdict
args: [!!python/name:__builtin__.list '']
dictitems:
  ABCMeta: [abc]
  Aborter: [werkzeug]
  Accept: [werkzeug]
  AcceptMixin: [werkzeug]
  AccessDenied: [psutil]
  Action: [argparse]
  Adam: [downhill]
  Add: [ast, codegen]
  Again: [zmq]
  Agent: [paramiko]
  AgentKey: [paramiko]
  AliasEvent: [yaml]
  AliasToken: [yaml]
  AlreadyLocked: [lockfile]
  AmbiguousTimeError: [pytz]
  AnchorToken: [yaml]
  And: [ast, codegen, pyparsing]
  Annotation: [plac]
  AnsiToWin32: [colorama]
  AnyOptions: [docopt]
  ApplicationError: [docutils]
  Apply: [theano]
  AptDistro: [rosdistro]
  ArgInfo: [inspect]
  ArgSpec: [inspect]
  Argument: [docopt]
  ArgumentDefaultsHelpFormatter: [argparse]
  ArgumentError: [argparse]
  ArgumentParser: [argparse, plac]
  ArgumentTypeError: [argparse]
  ArgumentValidationError: [werkzeug]
  Arguments: [inspect]
  ArithmeticError: [exceptions]
  ArrayType: [Cython]
  Assert: [ast, codegen]
  AssertionError: [exceptions]
  Assign: [ast, codegen]
  Attribute: [inspect, ast, codegen]
  AttributeError: [exceptions]
  AugAssign: [ast, codegen]
  AugLoad: [ast, codegen]
  AugStore: [ast, codegen]
  AuthHandler: [paramiko]
  AuthenticationException: [paramiko]
  Authorization: [werkzeug]
  AuthorizationMixin: [werkzeug]
  AutoAddPolicy: [paramiko]
  Autoencoder: [theanets]
  BadAuthenticationType: [paramiko]
  BadData: [itsdangerous]
  BadHeader: [itsdangerous]
  BadHostKeyException: [paramiko]
  BadPayload: [itsdangerous]
  BadPrototypeError: [objc]
  BadSignature: [itsdangerous]
  BadTimeSignature: [itsdangerous]
  Base: [mock]
  BaseDumper: [yaml]
  BaseException: [exceptions]
  BaseLoader: [yaml, jinja2]
  BaseRequest: [werkzeug]
  BaseResponse: [werkzeug]
  BaseSFTP: [paramiko]
  BaseTestSuite: [unittest, unittest2]
  BaseXMPP: [sleekxmpp]
  BeautifulSOAP: [BeautifulSoup]
  BeautifulSoup: [BeautifulSOAP, BeautifulSoup, BeautifulSoup, BeautifulStoneSoup,
    CData, Comment, Declaration, ICantBelieveItsBeautifulSoup, MinimalSoup, NavigableString,
    PageElement, ProcessingInstruction, ResultSet, RobustHTMLParser, RobustInsanelyWackAssHTMLParser,
    RobustWackAssHTMLParser, RobustXMLParser, SGMLParseError, SGMLParser, SimplifyingSOAPParser,
    SoupStrainer, StopParsing, Tag, UnicodeDammit]
  BeautifulStoneSoup: [BeautifulSoup]
  BinOp: [ast, codegen]
  BitAnd: [ast, codegen]
  BitOr: [ast, codegen]
  BitXor: [ast, codegen]
  BlockEndToken: [yaml]
  BlockEntryToken: [yaml]
  BlockFinder: [inspect]
  BlockMappingStartToken: [yaml]
  BlockSequenceStartToken: [yaml]
  Blueprint: [flask]
  BoolOp: [ast, codegen]
  BooleanType: [types]
  BotoCoreObject: [botocore]
  BoundArguments: [funcsigs]
  Break: [ast, codegen]
  Broker: [enchant]
  Buffer: [pyopencl]
  BufferError: [exceptions]
  BufferType: [types]
  BufferedFile: [paramiko]
  BufferedIncrementalDecoder: [codecs]
  BufferedIncrementalEncoder: [codecs]
  Builder: [configobj]
  BuiltinFunctionType: [types]
  BuiltinMethodType: [types]
  BytecodeCache: [jinja2]
  BytesIO: [six]
  BytesWarning: [exceptions]
  BzrClient: [vcstools]
  CBaseDumper: [yaml]
  CBaseLoader: [yaml]
  CData: [BeautifulSoup]
  CDumper: [yaml]
  CLinker: [theano]
  CLoader: [yaml]
  CPyUserInterface: [pytools]
  CSafeDumper: [yaml]
  CSafeLoader: [yaml]
  CachedManifestProvider: [rosdistro]
  Call: [ast, codegen]
  Callable: [collections]
  CallableMixin: [mock]
  Callback: [sleekxmpp]
  CallbackDict: [werkzeug]
  CaselessKeyword: [pyparsing]
  CaselessLiteral: [pyparsing]
  Categorical: [pandas]
  Channel: [paramiko]
  ChannelException: [paramiko]
  ChannelFile: [paramiko]
  CharsNotIn: [pyparsing]
  CharsetAccept: [werkzeug]
  ChildPattern: [docopt]
  ChoiceLoader: [jinja2]
  CircuitExtensionFailed: [stem]
  ClassDef: [ast, codegen]
  ClassType: [types, mock]
  Classifier: [theanets]
  Client: [werkzeug]
  ClientXMPP: [sleekxmpp]
  ClosingIterator: [werkzeug]
  CodeToAst: [astor]
  CodeType: [types]
  Codec: [codecs]
  CodecInfo: [codecs]
  CodecRegistryError: [encodings]
  CollectionEndEvent: [yaml]
  CollectionNode: [yaml]
  CollectionStartEvent: [yaml]
  ColoredStreamHandler: [coloredlogs]
  Combine: [pyparsing]
  CombinedMultiDict: [werkzeug]
  Command: [docopt, setuptools]
  CommandError: [pip]
  CommandLineParser: [fortune]
  CommandQueue: [opencl, pyopencl]
  Comment: [BeautifulSoup]
  CommonRequestDescriptorsMixin: [werkzeug]
  CommonResponseDescriptorsMixin: [werkzeug]
  Compare: [ast, codegen]
  CompilerWarning: [pyopencl]
  ComplexType: [types]
  ComplexWarning: [numpy, scipy]
  Component: [theano, docutils]
  ComponentDict: [theano]
  ComponentList: [theano]
  ComponentXMPP: [sleekxmpp]
  Composite: [theano]
  Config: [flask]
  ConfigObj: [configobj]
  ConfigObjError: [configobj]
  ConfigOptionParser: [pip, virtualenv]
  ConfigParserInterpolation: [configobj]
  ConfigspecError: [configobj]
  ConnectionError: [requests]
  Constant: [theano]
  Container: [collections, theano]
  Context: [opencl, pyopencl, zmq]
  ContextManager: [decorator]
  ContextProperties: [opencl]
  ContextTerminated: [zmq]
  Continue: [ast, codegen]
  ControllerError: [stem]
  Counter: [collections]
  Cython: [ArrayType, CythonDotParallel, CythonMetaType, CythonType, CythonTypeObject,
    PointerType, StructType, UnionType, p_Py_UCS4, p_Py_UNICODE, p_Py_ssize_t, p_bint,
    p_char, p_complex, p_double, p_doublecomplex, p_float, p_floatcomplex, p_int,
    p_long, p_longdouble, p_longdoublecomplex, p_longlong, p_short, p_size_t, p_void,
    pp_Py_UCS4, pp_Py_UNICODE, pp_Py_ssize_t, pp_bint, pp_char, pp_complex, pp_double,
    pp_doublecomplex, pp_float, pp_floatcomplex, pp_int, pp_long, pp_longdouble, pp_longdoublecomplex,
    pp_longlong, pp_short, pp_size_t, pp_void, ppp_Py_UCS4, ppp_Py_UNICODE, ppp_Py_ssize_t,
    ppp_bint, ppp_char, ppp_complex, ppp_double, ppp_doublecomplex, ppp_float, ppp_floatcomplex,
    ppp_int, ppp_long, ppp_longdouble, ppp_longdoublecomplex, ppp_longlong, ppp_short,
    ppp_size_t, ppp_void, typedef]
  CythonDotParallel: [Cython]
  CythonMetaType: [Cython]
  CythonType: [Cython]
  CythonTypeObject: [Cython]
  DSSKey: [paramiko]
  DataError: [docutils]
  DataFormatError: [execnet]
  DataFrame: [pandas]
  DataSource: [numpy, scipy]
  Dataset: [downhill]
  DateOffset: [pandas]
  DateRange: [pandas]
  DatetimeIndex: [pandas]
  DebugMetaclass: [debugger]
  DebugUndefined: [jinja2]
  DebuggedApplication: [werkzeug]
  Declaration: [BeautifulSoup]
  DecryptionError: [rsa]
  DefaultLanguageNotFoundError: [enchant]
  Del: [ast, codegen]
  Delete: [ast, codegen]
  DependentDictionary: [pytools]
  DeprecatedTest: [nose]
  DeprecationWarning: [exceptions]
  DevelDistro: [rosdistro]
  Device: [opencl, pyopencl]
  DeviceMemoryView: [opencl]
  DiGraph: [networkx]
  Dict: [ast, codegen, docopt, enchant, pyparsing]
  DictComp: [ast, codegen]
  DictLoader: [jinja2]
  DictMixin: [UserDict, ordereddict]
  DictNotFoundError: [enchant]
  DictProxyType: [types]
  DictType: [types]
  DictWithPWL: [enchant]
  DictionaryType: [types]
  DictionaryWithDefault: [pytools]
  DirectiveToken: [yaml]
  DisconnectContextManager: [qtutils]
  DispatcherMiddleware: [werkzeug]
  Distribution: [rosdistro, setuptools]
  DistributionCache: [rosdistro]
  DistributionFile: [rosdistro]
  Div: [ast, codegen]
  DocBuildFile: [rosdistro]
  DocFile: [rosdistro]
  DocoptExit: [docopt]
  DocoptLanguageError: [docopt]
  DocumentEndEvent: [yaml]
  DocumentEndToken: [yaml]
  DocumentStartEvent: [yaml]
  DocumentStartToken: [yaml]
  Draft3Validator: [jsonschema]
  Draft4Validator: [jsonschema]
  DualLinker: [theano]
  Dumper: [yaml]
  DuplicateError: [configobj]
  ECDSAKey: [paramiko]
  EOFError: [exceptions]
  ETagRequestMixin: [werkzeug]
  ETagResponseMixin: [werkzeug]
  ETags: [werkzeug]
  Each: [pyparsing]
  Either: [docopt]
  ElementBase: [sleekxmpp]
  Ellipsis: [ast, codegen]
  EllipsisType: [types]
  Empty: [pyparsing]
  EnchantStr: [enchant]
  EndOfBlock: [inspect]
  Enum: [enum]
  EnumMeta: [enum]
  EnvironBuilder: [werkzeug]
  EnvironHeaders: [werkzeug]
  Environment: [jinja2]
  EnvironmentError: [exceptions]
  Eq: [ast, codegen]
  Error: [lockfile, psutil, enchant, pyopencl]
  ErrorTree: [jsonschema]
  EscapeFormatter: [markupsafe]
  Event: [yaml, opencl, pyopencl]
  ExcelFile: [pandas]
  ExcelWriter: [pandas]
  ExceptHandler: [ast, codegen]
  Exception: [exceptions]
  Exec: [ast, codegen]
  Experiment: [theanets]
  ExplicitNodeVisitor: [astor]
  Expr: [ast, codegen, pandas]
  Expression: [ast, codegen]
  ExpressionError: [cssselect]
  ExtSlice: [ast, codegen]
  Extension: [setuptools]
  External: [theano]
  FSRef: [objc]
  FSSpec: [objc]
  FakeList: [pytools]
  FancyModule: [theano]
  Feature: [setuptools]
  Figure: [glumpy]
  FileLike: [serial]
  FileLock: [lockfile]
  FileMultiDict: [werkzeug]
  FileStorage: [werkzeug]
  FileSystemBytecodeCache: [jinja2]
  FileSystemLoader: [jinja2]
  FileType: [types, argparse, mutagen]
  FileWrapper: [werkzeug]
  Flask: [flask]
  Float64Index: [pandas]
  FloatType: [types]
  FloatingPointError: [exceptions]
  FloorDiv: [ast, codegen]
  FlowEntryToken: [yaml]
  FlowMappingEndToken: [yaml]
  FlowMappingStartToken: [yaml]
  FlowSequenceEndToken: [yaml]
  FlowSequenceStartToken: [yaml]
  FollowedBy: [pyparsing]
  For: [ast, codegen]
  Format: [scikits.audiolab]
  FormatChecker: [jsonschema]
  FormatError: [jsonschema]
  Formatter: [string]
  Forward: [pyparsing]
  Frame: [zmq]
  FrameType: [types]
  FrozenRequirement: [pip]
  FunctionDef: [ast, codegen]
  FunctionGraph: [theano]
  FunctionLoader: [jinja2]
  FunctionMaker: [theano, decorator]
  FunctionTestCase: [unittest, unittest2]
  FunctionType: [types]
  FunctionalPseudoElement: [cssselect]
  FutureWarning: [exceptions]
  GeneratorContextManager: [decorator]
  GeneratorExit: [exceptions]
  GeneratorExp: [ast, codegen]
  GeneratorType: [types]
  Generic: [theano]
  GenericTranslator: [cssselect]
  GetSetDescriptorType: [types]
  GitClient: [vcstools]
  Global: [ast, codegen]
  GlobalInfo: [shedskin]
  GoToColumn: [pyparsing]
  Graph: [networkx]
  GraphError: [altgraph]
  GraphMLReader: [networkx]
  GraphMLWriter: [networkx]
  Greenlet: [gevent]
  GreenletExit: [gevent, greenlet]
  Group: [execnet, pyparsing]
  Gt: [ast, codegen]
  GtE: [ast, codegen]
  HDFStore: [pandas]
  HMACAlgorithm: [itsdangerous]
  HTMLBuilder: [werkzeug]
  HTMLTranslator: [cssselect]
  HTTPError: [requests]
  Hashable: [collections]
  HeaderSet: [werkzeug]
  Headers: [werkzeug]
  HelpFormatter: [argparse]
  HgClient: [vcstools]
  HostKeys: [paramiko]
  HostNotFound: [execnet]
  Href: [werkzeug]
  ICantBelieveItsBeautifulSoup: [BeautifulSoup]
  IOError: [exceptions]
  If: [ast, codegen]
  IfExp: [ast, codegen]
  Image: [glumpy, opencl, pyopencl]
  ImageDescriptor: [pyopencl]
  ImageFormat: [opencl, pyopencl]
  ImmutableDict: [werkzeug]
  ImmutableList: [werkzeug]
  ImmutableMultiDict: [werkzeug]
  ImmutableOrderedMultiDict: [werkzeug]
  ImmutableTypeConversionDict: [werkzeug]
  Import: [ast, codegen]
  ImportError: [exceptions]
  ImportFrom: [ast, codegen]
  ImportWarning: [exceptions]
  In: [theano, ast, codegen]
  InconsistencyError: [theano]
  IncrementalDecoder: [codecs]
  IncrementalEncoder: [codecs]
  IndentationError: [exceptions]
  Index: [ast, codegen, pandas, rosdistro]
  IndexError: [exceptions]
  InfixOperator: [pytools]
  InsecureRequestWarning: [pip]
  InstallationError: [pip]
  InstanceType: [types]
  Int64Index: [pandas]
  IntEnum: [enum]
  IntType: [types]
  Interactive: [ast, codegen]
  InteractiveQuery: [paramiko]
  InterpolationEngine: [configobj]
  InterpolationError: [interpy.codec.tokenizer, configobj]
  InterpolationLoopError: [configobj]
  Interpreter: [asteval, jedi, plac]
  InvalidArguments: [stem]
  InvalidDate: [humanfriendly]
  InvalidJID: [sleekxmpp]
  InvalidManifest: [rospkg]
  InvalidRequest: [stem]
  InvalidSize: [humanfriendly]
  InvalidTimeError: [pytz]
  Invert: [ast, codegen]
  Iq: [sleekxmpp]
  Is: [ast, codegen]
  IsNot: [ast, codegen]
  ItemsView: [collections]
  Iterable: [collections]
  IterableUserDict: [UserDict]
  Iterator: [collections, six]
  ItimerError: [signal]
  JSONWebSignatureSerializer: [itsdangerous]
  Kernel: [opencl, pyopencl]
  KeyError: [exceptions]
  KeyToken: [yaml]
  KeyboardInterrupt: [exceptions]
  KeysView: [collections]
  Keyword: [pyparsing]
  LShift: [ast, codegen]
  Lambda: [ast, codegen]
  LambdaType: [types]
  LanguageAccept: [werkzeug]
  LazyDict: [pytz]
  LazyList: [pytz]
  LazySet: [pytz]
  LevelDB: [leveldb]
  LevelDBError: [leveldb]
  LimitedStream: [werkzeug]
  LineEnd: [pyparsing]
  LineStart: [pyparsing]
  Linker: [theano]
  List: [ast, codegen]
  ListComp: [ast, codegen]
  ListType: [types]
  Literal: [pyparsing]
  Load: [ast, codegen]
  Loader: [yaml]
  Local: [werkzeug]
  LocalLinker: [theano]
  LocalManager: [werkzeug]
  LocalMemory: [pyopencl]
  LocalProxy: [werkzeug]
  LocalStack: [werkzeug]
  LockBase: [lockfile]
  LockError: [lockfile, objc]
  LockFailed: [lockfile]
  LockFile: [lockfile]
  LockTimeout: [lockfile]
  LockType: [thread]
  Logger: [joblib, virtualenv]
  LogicError: [pyopencl]
  LongType: [types]
  LookupError: [exceptions]
  LooseVersion: [pandas]
  Lt: [ast, codegen]
  LtE: [ast, codegen]
  MIMEAccept: [werkzeug]
  MachAr: [numpy, scipy]
  MagicMixin: [mock]
  MagicMock: [mock]
  MagicProxy: [mock]
  Manifest: [rospkg]
  Mapping: [collections, markupsafe]
  MappingEndEvent: [yaml]
  MappingNode: [yaml]
  MappingStartEvent: [yaml]
  MappingView: [collections]
  Mark: [yaml]
  MarkedYAMLError: [yaml]
  Markup: [flask, jinja2, markupsafe]
  MatchFirst: [pyparsing]
  MatchMany: [sleekxmpp]
  MatchXMLMask: [sleekxmpp]
  MatchXPath: [sleekxmpp]
  MatcherId: [sleekxmpp]
  Member: [theano]
  MemberDescriptorType: [types]
  MemcachedBytecodeCache: [jinja2]
  MemorizedResult: [joblib]
  Memory: [joblib]
  MemoryError: [exceptions, pyopencl]
  MemoryMap: [pyopencl]
  MemoryObject: [opencl, pyopencl]
  MemoryObjectHolder: [pyopencl]
  MemoryPool: [pyopencl]
  Message: [paramiko, zmq, sleekxmpp]
  MessageTracker: [zmq]
  Metadata: [mutagen]
  Method: [theano]
  MethodType: [types]
  MinimalSoup: [BeautifulSoup]
  MissingHostKeyPolicy: [paramiko]
  MissingInterpolationOption: [configobj]
  Mock: [mock]
  Mod: [ast, codegen]
  Mode: [theano]
  Module: [theano, ast, codegen, flask]
  ModuleDeprecationWarning: [numpy, scipy]
  ModuleInfo: [inspect]
  ModuleLoader: [jinja2]
  ModuleType: [types]
  Module_six_moves_urllib: [six]
  Module_six_moves_urllib_error: [six]
  Module_six_moves_urllib_parse: [six]
  Module_six_moves_urllib_request: [six]
  Module_six_moves_urllib_response: [six]
  Module_six_moves_urllib_robotparser: [six]
  Monitor: [plac]
  MovedAttribute: [six]
  MovedFunctionDeprecationWrapper: [pytools]
  MovedModule: [six]
  Mult: [ast, codegen]
  MultiChannel: [execnet]
  MultiDiGraph: [networkx]
  MultiDict: [werkzeug]
  MultiGraph: [networkx]
  MultiIndex: [pandas]
  MutableMapping: [collections]
  MutableSequence: [collections]
  MutableSet: [collections]
  NSDecimal: [objc]
  Name: [ast, codegen]
  NameError: [exceptions]
  NameFinder: [asteval]
  Namespace: [argparse]
  NannyEvent: [pyopencl]
  NavigableString: [BeautifulSoup]
  NestingError: [configobj]
  Network: [theanets]
  NetworkXAlgorithmError: [networkx]
  NetworkXError: [networkx]
  NetworkXException: [networkx]
  NetworkXNoPath: [networkx]
  NetworkXNotImplemented: [networkx]
  NetworkXPointlessConcept: [networkx]
  NetworkXTreewidthBoundExceeded: [networkx]
  NetworkXUnbounded: [networkx]
  NetworkXUnfeasible: [networkx]
  NoMatch: [pyparsing]
  NoSuchProcess: [psutil]
  Node: [yaml]
  NodeEvent: [yaml]
  NodeTransformer: [ast, codegen]
  NodeVisitor: [ast, codegen]
  NonCallableMagicMock: [mock]
  NonCallableMock: [mock]
  NonExistentTimeError: [pytz]
  NoneAlgorithm: [itsdangerous]
  NoneType: [types]
  Norm: [pytools]
  Not: [ast, codegen]
  NotAny: [pyparsing]
  NotDone: [zmq]
  NotEq: [ast, codegen]
  NotFoundError: [jedi]
  NotImplementedError: [exceptions]
  NotImplementedType: [types]
  NotIn: [ast, codegen]
  NotLocked: [lockfile]
  NotMyLock: [lockfile]
  NullHandler: [requests, botocore, gensim]
  NullImporter: [imp]
  Num: [ast, codegen]
  OSError: [exceptions]
  ObjCLazyModule: [objc]
  ObjCPointer: [objc]
  ObjectType: [types]
  OldStyleClass: [mock]
  OneOrMore: [docopt, pyparsing]
  OnlyOnce: [pyparsing]
  Op: [theano]
  OpFromGraph: [theano]
  OpWiseCLinker: [theano]
  OpenCLException: [opencl]
  OpenMPOp: [theano]
  OperationFailed: [stem]
  Optimizer: [downhill]
  Option: [docopt]
  Optional: [docopt, pyparsing]
  Or: [ast, codegen, pyparsing]
  OrderedDict: [collections, enum, funcsigs, ordereddict]
  OrderedMultiDict: [werkzeug]
  OrderedUpdates: [theano]
  Out: [theano]
  OverflowError: [exceptions]
  PEP420PackageFinder: [setuptools]
  PKey: [paramiko]
  PaMacCoreStreamInfo: [pyaudio]
  PackageFinder: [setuptools]
  PackageLoader: [numpy, scipy, jinja2]
  Packetizer: [paramiko]
  PageElement: [BeautifulSoup]
  Panda: [panda]
  Panel: [pandas]
  Panel4D: [pandas]
  Parallel: [joblib]
  Param: [theano, ast, codegen]
  Parameter: [funcsigs]
  ParentPattern: [docopt]
  ParseBaseException: [pyparsing]
  ParseElementEnhance: [pyparsing]
  ParseError: [configobj]
  ParseException: [pyparsing]
  ParseExpression: [pyparsing]
  ParseFatalException: [pyparsing]
  ParseResults: [pyparsing]
  ParseSyntaxException: [pyparsing]
  ParserElement: [pyparsing]
  Pass: [ast, codegen]
  PasswordRequiredException: [paramiko]
  Path: [pathlib]
  Pattern: [docopt]
  PendingDeprecationWarning: [exceptions]
  PerformLinker: [theano]
  Period: [pandas]
  PeriodIndex: [pandas]
  PipError: [pip]
  Platform: [opencl, pyopencl]
  PointerType: [Cython]
  Poller: [zmq]
  PooledBuffer: [pyopencl]
  Popen: [psutil]
  PosixPath: [pathlib]
  PosixPollSerial: [serial]
  PosixSerial: [serial]
  Pow: [ast, codegen]
  PrefixLoader: [jinja2]
  PreparedRequest: [requests]
  Presence: [sleekxmpp]
  Print: [ast, codegen]
  PrintTime: [joblib]
  PrivateKey: [rsa]
  Process: [psutil]
  ProcessingInstruction: [BeautifulSoup]
  ProfileMode: [theano]
  ProfileStats: [theano]
  Program: [opencl, pyopencl]
  ProgressBar: [pytools]
  PropertyMock: [mock]
  ProtocolError: [objc, stem]
  ProviderDesc: [enchant]
  ProxyCommand: [paramiko]
  ProxyCommandFailure: [paramiko]
  PublicKey: [rsa]
  PurePath: [pathlib]
  PurePosixPath: [pathlib]
  PureWindowsPath: [pathlib]
  PyAudio: [pyaudio]
  PyObjCStrBridgeWarning: [objc]
  PyObject: [forbiddenfruit]
  PyPWL: [enchant]
  PyQuery: [pyquery]
  Py_ssize_t: [forbiddenfruit]
  PyaudioException: [scikits.audiolab]
  PyaudioIOError: [scikits.audiolab]
  QSettingsWrapper: [qtutils]
  Queue: [opencl]
  QuotedString: [pyparsing]
  RMSProp: [downhill]
  RProp: [downhill]
  RSAKey: [paramiko]
  RShift: [ast, codegen]
  RSync: [execnet]
  Raise: [ast, codegen]
  RankWarning: [numpy, scipy]
  RawDescriptionHelpFormatter: [argparse]
  RawTextHelpFormatter: [argparse]
  RcParams: [matplotlib]
  ReadlineInput: [plac]
  Record: [pytools]
  RecordWithoutPickling: [pytools]
  RecursiveGrammarException: [pyparsing]
  RefResolutionError: [jsonschema]
  RefResolver: [jsonschema]
  Reference: [pytools]
  ReferenceError: [exceptions]
  Regex: [pyparsing]
  Regressor: [theanets]
  RejectPolicy: [paramiko]
  Release: [rosdistro]
  ReleaseBuild: [rosdistro]
  ReleaseBuildFile: [rosdistro]
  ReleaseCache: [rosdistro]
  ReleaseFile: [rosdistro]
  ReloadError: [configobj]
  RemoteError: [execnet]
  RepeatSectionError: [configobj]
  Repr: [ast, codegen]
  Request: [requests, flask, werkzeug]
  RequestCacheControl: [werkzeug]
  RequestException: [requests]
  Require: [setuptools]
  Required: [docopt]
  ResourceNotFound: [rospkg]
  Response: [requests, flask, werkzeug]
  ResponseCacheControl: [werkzeug]
  ResponseStreamMixin: [werkzeug]
  RestartStream: [sleekxmpp]
  ResultSet: [BeautifulSoup]
  Return: [ast, codegen]
  RevivedObjectiveCObjectWarning: [objc]
  RobustHTMLParser: [BeautifulSoup]
  RobustInsanelyWackAssHTMLParser: [BeautifulSoup]
  RobustWackAssHTMLParser: [BeautifulSoup]
  RobustXMLParser: [BeautifulSoup]
  RosDistro: [rosdistro]
  RosPack: [rospkg]
  RosStack: [rospkg]
  RuntimeError: [exceptions, pyopencl]
  RuntimeWarning: [exceptions]
  SFTPAttributes: [paramiko]
  SFTPClient: [paramiko]
  SFTPError: [paramiko]
  SFTPFile: [paramiko]
  SFTPHandle: [paramiko]
  SFTPServer: [paramiko]
  SFTPServerInterface: [paramiko]
  SGMLParseError: [BeautifulSoup]
  SGMLParser: [BeautifulSoup]
  SSHClient: [paramiko]
  SSHConfig: [paramiko]
  SSHException: [paramiko]
  SafeDumper: [yaml]
  SafeLoader: [yaml]
  Sampler: [pyopencl]
  ScalarEvent: [yaml]
  ScalarNode: [yaml]
  ScalarToken: [yaml]
  Scanner: [re]
  SchemaError: [jsonschema]
  Script: [jedi]
  Section: [configobj]
  SecurityOptions: [paramiko]
  Selector: [cssselect]
  SelectorError: [cssselect]
  SelectorSyntaxError: [cssselect]
  Sequence: [collections, pathlib]
  SequenceEndEvent: [yaml]
  SequenceNode: [yaml]
  SequenceStartEvent: [yaml]
  Serial: [serial]
  SerialBase: [serial]
  SerialException: [serial]
  SerialTimeoutException: [serial]
  Serializer: [itsdangerous]
  Series: [pandas]
  ServerInterface: [paramiko]
  Session: [requests, flask]
  Set: [collections, ast, codegen]
  SetComp: [ast, codegen]
  SettingsSpec: [docutils]
  SharedDataMiddleware: [werkzeug]
  Signature: [funcsigs]
  SignatureExpired: [itsdangerous]
  Signer: [itsdangerous]
  SigningAlgorithm: [itsdangerous]
  SimpleVal: [configobj]
  SimplifyingSOAPParser: [BeautifulSoup]
  Sized: [collections]
  SkipTest: [nose, unittest, unittest2]
  SkipTo: [pyparsing]
  Slice: [ast, codegen]
  SliceType: [types]
  SlotsProxy: [forbiddenfruit]
  Snapshot: [leveldb]
  Sndfile: [scikits.audiolab]
  Socket: [zmq]
  SocketClosed: [stem]
  SocketError: [stem]
  SoupStrainer: [BeautifulSoup]
  SourceBuildFile: [rosdistro]
  SourceFile: [rosdistro]
  SourceGenerator: [codegen]
  SparseArray: [pandas]
  SparseDataFrame: [pandas]
  SparseList: [pandas]
  SparsePanel: [pandas]
  SparseSeries: [pandas]
  SparseTimeSeries: [pandas]
  Spinner: [humanfriendly]
  StandardError: [exceptions]
  StanzaPath: [sleekxmpp]
  StderrToStdout: [pytools]
  StopIteration: [exceptions]
  StopParsing: [BeautifulSoup]
  StopTokenizing: [tokenize]
  Stopwatch: [zmq]
  Store: [ast, codegen]
  Str: [ast, codegen]
  Stream: [pyaudio]
  StreamEndEvent: [yaml]
  StreamEndToken: [yaml]
  StreamReader: [codecs]
  StreamReaderWriter: [codecs]
  StreamRecoder: [codecs]
  StreamStartEvent: [yaml]
  StreamStartToken: [yaml]
  StreamWriter: [codecs]
  StrictUndefined: [jinja2]
  StringEnd: [pyparsing]
  StringIO: [StringIO, StringIO, interpy.codec.utils, six, interpy.codec.register,
    interpy.codec.tokenizer, pygments, unirest]
  StringStart: [pyparsing]
  StringType: [types]
  StructType: [Cython]
  Sub: [ast, codegen]
  Subscript: [ast, codegen]
  SubsystemHandler: [paramiko]
  Suite: [ast, codegen]
  Suppress: [pyparsing]
  SvnClient: [vcstools]
  SymbolicInput: [theano]
  SymbolicOutput: [theano]
  SyntaxError: [exceptions]
  SyntaxWarning: [exceptions]
  SystemError: [exceptions]
  SystemExit: [exceptions]
  TabError: [exceptions]
  Table: [pytools]
  Tag: [BeautifulSoup]
  TagToken: [yaml]
  TarClient: [vcstools]
  Template: [string, jinja2]
  TemplateAssertionError: [jinja2]
  TemplateError: [jinja2]
  TemplateInterpolation: [configobj]
  TemplateNotFound: [jinja2]
  TemplateSyntaxError: [jinja2]
  TemplatesNotFound: [jinja2]
  Term: [pandas]
  TestCase: [unittest, unittest2]
  TestLoader: [unittest, unittest2]
  TestProgram: [unittest, unittest2]
  TestResult: [unittest, unittest2]
  TestSuite: [unittest, unittest2]
  Tester: [numpy, scikits.audiolab, scipy]
  TextTestResult: [unittest, unittest2]
  TextTestRunner: [unittest, unittest2]
  TimeGrouper: [pandas]
  TimeSeries: [pandas]
  TimedJSONWebSignatureSerializer: [itsdangerous]
  TimedSerializer: [itsdangerous]
  Timeout: [requests, gevent]
  TimeoutError: [execnet]
  TimeoutExpired: [psutil]
  Timer: [humanfriendly]
  Timestamp: [pandas]
  TimestampSigner: [itsdangerous]
  TkMonitor: [plac]
  Token: [yaml, pyparsing]
  TokenConverter: [pyparsing]
  TokenError: [tokenize]
  TokenStream: [docopt]
  TokenizerNotFoundError: [enchant]
  TooManyRedirects: [requests]
  Traceback: [inspect]
  TracebackType: [types]
  Trackball: [glumpy]
  TransformSpec: [docutils]
  Transport: [paramiko]
  TreeWalk: [astor]
  TryExcept: [ast, codegen]
  TryFinally: [ast, codegen]
  Tuple: [ast, codegen]
  TupleType: [types]
  Type: [theano]
  TypeConversionDict: [werkzeug]
  TypeError: [exceptions]
  TypeType: [types]
  UAdd: [ast, codegen]
  URLRequired: [requests]
  URLSafeSerializer: [itsdangerous]
  URLSafeSerializerMixin: [itsdangerous]
  URLSafeTimedSerializer: [itsdangerous]
  USub: [ast, codegen]
  UiLoader: [qtutils]
  UnaryOp: [ast, codegen]
  UnboundLocalError: [exceptions]
  UnboundMethodType: [types]
  Undefined: [jinja2]
  UndefinedError: [jinja2]
  UnicodeDammit: [BeautifulSoup]
  UnicodeDecodeError: [exceptions]
  UnicodeEncodeError: [exceptions]
  UnicodeError: [exceptions]
  UnicodeTranslateError: [exceptions]
  UnicodeType: [types]
  UnicodeWarning: [exceptions]
  UninitializedDeallocWarning: [objc]
  UnionType: [Cython]
  UniqueNameGenerator: [pytools]
  UnirestResponse: [unirest]
  UnknownPointerError: [objc]
  UnknownTimeZoneError: [pytz]
  UnknownType: [configobj]
  UnlockError: [lockfile]
  UnreprError: [configobj]
  UnsatisfiableRequest: [stem]
  Untokenizer: [tokenize]
  Upcase: [pyparsing]
  UpdatingDefaultsHelpFormatter: [pip, virtualenv]
  UserAgent: [werkzeug]
  UserAgentMixin: [werkzeug]
  UserDict: [DictMixin, IterableUserDict, UserDict, UserDict]
  UserEvent: [opencl, pyopencl]
  UserWarning: [exceptions]
  VCSClient: [vcstools]
  ValidationError: [jsonschema]
  ValueError: [exceptions]
  ValueToken: [yaml]
  ValuesView: [collections]
  Variable: [theano]
  VarianceAggregator: [pytools]
  VcsClient: [vcstools]
  Verbose: [matplotlib]
  VerificationError: [rsa]
  VertexBuffer: [glumpy]
  VisibleDeprecationWarning: [numpy, scipy]
  WWWAuthenticate: [werkzeug]
  WWWAuthenticateMixin: [werkzeug]
  Waiter: [sleekxmpp]
  Warning: [exceptions]
  WarningMessage: [warnings]
  WarningPolicy: [paramiko]
  WeakRef: [objc]
  WeakSet: [abc]
  While: [ast, codegen]
  White: [pyparsing]
  WidePanel: [pandas]
  Window: [glumpy]
  WindowsPath: [pathlib]
  With: [ast, codegen]
  Word: [pyparsing]
  WordClusters: [word2vec]
  WordEnd: [pyparsing]
  WordStart: [pyparsing]
  WordVectors: [word2vec]
  WriteBatch: [leveldb]
  XMLCallback: [sleekxmpp]
  XMLStream: [sleekxmpp]
  XMLWaiter: [sleekxmpp]
  XRangeType: [types]
  XSpec: [execnet]
  YAMLError: [yaml]
  YAMLObject: [yaml]
  YAMLObjectMetaclass: [yaml]
  Yield: [ast, codegen]
  ZMQBaseError: [zmq]
  ZMQBindError: [zmq]
  ZMQError: [zmq]
  ZMQVersionError: [zmq]
  ZeroDivisionError: [exceptions]
  ZeroOrMore: [pyparsing]
  ZipImportError: [zipimport]
  abc: [ABCMeta, WeakSet, abstractproperty]
  abstractproperty: [abc]
  addressing_mode: [pyopencl]
  affinity_domain_ext: [pyopencl]
  alias: [ast, codegen]
  altgraph: [GraphError]
  argparse: [Action, ArgumentDefaultsHelpFormatter, ArgumentError, ArgumentParser,
    ArgumentTypeError, FileType, HelpFormatter, Namespace, RawDescriptionHelpFormatter,
    RawTextHelpFormatter]
  arguments: [ast, codegen]
  array_property: [objc]
  array_type: [opencl]
  ast: [Add, And, Assert, Assign, Attribute, AugAssign, AugLoad, AugStore, BinOp,
    BitAnd, BitOr, BitXor, BoolOp, Break, Call, ClassDef, Compare, Continue, Del,
    Delete, Dict, DictComp, Div, Ellipsis, Eq, ExceptHandler, Exec, Expr, Expression,
    ExtSlice, FloorDiv, For, FunctionDef, GeneratorExp, Global, Gt, GtE, If, IfExp,
    Import, ImportFrom, In, Index, Interactive, Invert, Is, IsNot, LShift, Lambda,
    List, ListComp, Load, Lt, LtE, Mod, Module, Mult, Name, NodeTransformer, NodeVisitor,
    Not, NotEq, NotIn, Num, Or, Param, Pass, Pow, Print, RShift, Raise, Repr, Return,
    Set, SetComp, Slice, Store, Str, Sub, Subscript, Suite, TryExcept, TryFinally,
    Tuple, UAdd, USub, UnaryOp, While, With, Yield, alias, arguments, boolop, cmpop,
    comprehension, excepthandler, expr, expr_context, keyword, mod, operator, slice,
    stmt, unaryop]
  asteval: [Interpreter, NameFinder]
  astor: [CodeToAst, ExplicitNodeVisitor, TreeWalk]
  atof_error: [string]
  atoi_error: [string]
  atol_error: [string]
  attrgetter: [operator, inspect, pathlib]
  autorelease_pool: [objc]
  basestring: [pathlib]
  binary_type: [six]
  bool: [numpy]
  bool8: [numpy, scipy]
  bool_: [numpy, scipy]
  bool_property: [objc]
  boolop: [ast, codegen]
  botocore: [BotoCoreObject, NullHandler]
  broadcast: [numpy, scipy]
  busdaycalendar: [numpy, scipy]
  byte: [numpy, scipy]
  bytes_: [numpy, scipy]
  cached_property: [werkzeug]
  catch_warnings: [warnings]
  cdouble: [numpy, scipy]
  cfloat: [numpy, scipy]
  chain: [itertools, heapq, tokenize, matplotlib]
  channel_order: [pyopencl]
  channel_type: [pyopencl]
  character: [numpy, scipy]
  chararray: [numpy, scipy]
  cl_char: [opencl]
  cl_char16: [opencl]
  cl_char2: [opencl]
  cl_char4: [opencl]
  cl_char8: [opencl]
  cl_double: [opencl]
  cl_double16: [opencl]
  cl_double2: [opencl]
  cl_double4: [opencl]
  cl_double8: [opencl]
  cl_float: [opencl]
  cl_float16: [opencl]
  cl_float2: [opencl]
  cl_float4: [opencl]
  cl_float8: [opencl]
  cl_half: [opencl]
  cl_int: [opencl]
  cl_int16: [opencl]
  cl_int2: [opencl]
  cl_int4: [opencl]
  cl_int8: [opencl]
  cl_long: [opencl]
  cl_long16: [opencl]
  cl_long2: [opencl]
  cl_long4: [opencl]
  cl_long8: [opencl]
  cl_short: [opencl]
  cl_short16: [opencl]
  cl_short2: [opencl]
  cl_short4: [opencl]
  cl_short8: [opencl]
  cl_uchar: [opencl]
  cl_uchar16: [opencl]
  cl_uchar2: [opencl]
  cl_uchar4: [opencl]
  cl_uchar8: [opencl]
  cl_uint: [opencl]
  cl_uint16: [opencl]
  cl_uint2: [opencl]
  cl_uint4: [opencl]
  cl_uint8: [opencl]
  cl_ulong: [opencl]
  cl_ulong16: [opencl]
  cl_ulong2: [opencl]
  cl_ulong4: [opencl]
  cl_ulong8: [opencl]
  cl_ushort: [opencl]
  cl_ushort16: [opencl]
  cl_ushort2: [opencl]
  cl_ushort4: [opencl]
  cl_ushort8: [opencl]
  cl_vector: [opencl]
  clongdouble: [numpy, scipy]
  clongfloat: [numpy, scipy]
  cmpop: [ast, codegen]
  codecs: [BufferedIncrementalDecoder, BufferedIncrementalEncoder, Codec, CodecInfo,
    IncrementalDecoder, IncrementalEncoder, StreamReader, StreamReaderWriter, StreamRecoder,
    StreamWriter]
  codegen: [Add, And, Assert, Assign, Attribute, AugAssign, AugLoad, AugStore, BinOp,
    BitAnd, BitOr, BitXor, BoolOp, Break, Call, ClassDef, Compare, Continue, Del,
    Delete, Dict, DictComp, Div, Ellipsis, Eq, ExceptHandler, Exec, Expr, Expression,
    ExtSlice, FloorDiv, For, FunctionDef, GeneratorExp, Global, Gt, GtE, If, IfExp,
    Import, ImportFrom, In, Index, Interactive, Invert, Is, IsNot, LShift, Lambda,
    List, ListComp, Load, Lt, LtE, Mod, Module, Mult, Name, NodeTransformer, NodeVisitor,
    Not, NotEq, NotIn, Num, Or, Param, Pass, Pow, Print, RShift, Raise, Repr, Return,
    Set, SetComp, Slice, SourceGenerator, Store, Str, Sub, Subscript, Suite, TryExcept,
    TryFinally, Tuple, UAdd, USub, UnaryOp, While, With, Yield, alias, arguments,
    boolop, cmpop, comprehension, excepthandler, expr, expr_context, keyword, mod,
    operator, slice, stmt, unaryop]
  collections: [Callable, Container, Counter, Hashable, ItemsView, Iterable, Iterator,
    KeysView, Mapping, MappingView, MutableMapping, MutableSequence, MutableSet, OrderedDict,
    Sequence, Set, Sized, ValuesView, defaultdict, deque]
  colorama: [AnsiToWin32]
  coloredlogs: [ColoredStreamHandler]
  combinations: [itertools]
  combinations_with_replacement: [itertools]
  command_execution_status: [pyopencl]
  command_queue_info: [pyopencl]
  command_queue_properties: [pyopencl]
  command_type: [pyopencl]
  complex: [numpy]
  complex128: [numpy, scipy]
  complex256: [numpy, scipy]
  complex64: [numpy, scipy]
  complex_: [numpy, scipy]
  complexfloating: [numpy, scipy]
  comprehension: [ast, codegen]
  compress: [itertools]
  configobj: [Builder, ConfigObj, ConfigObjError, ConfigParserInterpolation, ConfigspecError,
    DuplicateError, InterpolationEngine, InterpolationError, InterpolationLoopError,
    MissingInterpolationOption, NestingError, ParseError, ReloadError, RepeatSectionError,
    Section, SimpleVal, TemplateInterpolation, UnknownType, UnreprError]
  constant_memory: [opencl]
  context_info: [pyopencl]
  context_properties: [pyopencl]
  contextual_memory: [opencl]
  count: [itertools, heapq]
  csingle: [numpy, scipy]
  cssselect: [ExpressionError, FunctionalPseudoElement, GenericTranslator, HTMLTranslator,
    Selector, SelectorError, SelectorSyntaxError]
  cv: [cvmat, iplimage]
  cvmat: [cv]
  cycle: [itertools]
  datetime: [itsdangerous, panda, pandas]
  datetime64: [numpy, scipy]
  debugger: [DebugMetaclass]
  decorator: [ContextManager, FunctionMaker, GeneratorContextManager, getfullargspec]
  defaultdict: [collections, forbiddenfruit, pyasn]
  deque: [collections]
  device_affinity_domain: [pyopencl]
  device_exec_capabilities: [pyopencl]
  device_fp_config: [pyopencl]
  device_info: [pyopencl]
  device_local_mem_type: [pyopencl]
  device_mem_cache_type: [pyopencl]
  device_partition_property: [pyopencl]
  device_partition_property_ext: [pyopencl]
  device_type: [pyopencl]
  dict_property: [objc]
  docopt: [AnyOptions, Argument, ChildPattern, Command, Dict, DocoptExit, DocoptLanguageError,
    Either, OneOrMore, Option, Optional, ParentPattern, Pattern, Required, TokenStream]
  docutils: [ApplicationError, Component, DataError, SettingsSpec, TransformSpec]
  double: [numpy, scipy]
  downhill: [Adam, Dataset, Optimizer, RMSProp, RProp]
  dropwhile: [itertools]
  dtype: [numpy, scipy]
  enchant: [Broker, DefaultLanguageNotFoundError, Dict, DictNotFoundError, DictWithPWL,
    EnchantStr, Error, ProviderDesc, PyPWL, TokenizerNotFoundError]
  encodings: [CodecRegistryError]
  enum: [Enum, EnumMeta, IntEnum, OrderedDict]
  environ_property: [werkzeug]
  error: [os]
  errstate: [numpy, scipy]
  event_info: [pyopencl]
  excepthandler: [ast, codegen]
  exception: [tox]
  exceptions: [ArithmeticError, AssertionError, AttributeError, BaseException, BufferError,
    BytesWarning, DeprecationWarning, EOFError, EnvironmentError, Exception, FloatingPointError,
    FutureWarning, GeneratorExit, IOError, ImportError, ImportWarning, IndentationError,
    IndexError, KeyError, KeyboardInterrupt, LookupError, MemoryError, NameError,
    NotImplementedError, OSError, OverflowError, PendingDeprecationWarning, ReferenceError,
    RuntimeError, RuntimeWarning, StandardError, StopIteration, SyntaxError, SyntaxWarning,
    SystemError, SystemExit, TabError, TypeError, UnboundLocalError, UnicodeDecodeError,
    UnicodeEncodeError, UnicodeError, UnicodeTranslateError, UnicodeWarning, UserWarning,
    ValueError, Warning, ZeroDivisionError]
  execnet: [DataFormatError, Group, HostNotFound, MultiChannel, RSync, RemoteError,
    TimeoutError, XSpec]
  expr: [ast, codegen]
  expr_context: [ast, codegen]
  fileview: [virtualenv]
  filter_mode: [pyopencl]
  filterfalse: [setuptools]
  finfo: [numpy, scipy]
  flask: [Blueprint, Config, Flask, Markup, Module, Request, Response, Session]
  flatiter: [numpy, scipy]
  flexible: [numpy, scipy]
  float: [numpy]
  float128: [numpy, scipy]
  float16: [numpy, scipy]
  float32: [numpy, scipy]
  float64: [numpy, scipy]
  float_: [numpy, scipy]
  floating: [numpy, scipy]
  forbiddenfruit: [PyObject, Py_ssize_t, SlotsProxy, defaultdict]
  formal_protocol: [objc]
  format_parser: [numpy, scipy]
  formatinfo: [scikits.audiolab]
  fortune: [CommandLineParser]
  funcsigs: [BoundArguments, OrderedDict, Parameter, Signature]
  function: [objc]
  functools: [partial]
  functools32: [partial]
  generic: [numpy, scipy]
  gensim: [NullHandler]
  getfullargspec: [decorator, plac]
  gevent: [Greenlet, GreenletExit, Timeout, signal]
  gl_context_info: [pyopencl]
  global_memory: [opencl]
  glumpy: [Figure, Image, Trackball, VertexBuffer, Window]
  greenlet: [GreenletExit, greenlet, greenlet]
  groupby: [itertools]
  half: [numpy, scipy]
  header_property: [werkzeug]
  heapq: [chain, count, imap, islice, itemgetter, izip]
  humanfriendly: [InvalidDate, InvalidSize, Spinner, Timer]
  ifilter: [itertools]
  ifilterfalse: [itertools]
  iinfo: [numpy, scipy]
  image_info: [pyopencl]
  imap: [itertools, heapq]
  imp: [NullImporter]
  index_error: [string]
  inexact: [numpy, scipy]
  informal_protocol: [objc]
  inspect: [ArgInfo, ArgSpec, Arguments, Attribute, BlockFinder, EndOfBlock, ModuleInfo,
    Traceback, attrgetter]
  int: [numpy]
  int0: [numpy, scipy]
  int16: [numpy, scipy]
  int32: [numpy, scipy]
  int64: [numpy, scipy]
  int8: [numpy, scipy]
  int_: [numpy, scipy]
  int_type: [opencl]
  intc: [numpy, scipy]
  integer: [numpy, scipy]
  internal_error: [objc]
  interpy.codec.register: [StringIO]
  interpy.codec.tokenizer: [InterpolationError, StringIO]
  interpy.codec.utils: [StringIO]
  intp: [numpy, scipy]
  iplimage: [cv]
  islice: [itertools, heapq]
  itemgetter: [heapq, operator]
  itertools: [chain, combinations, combinations_with_replacement, compress, count,
    cycle, dropwhile, groupby, ifilter, ifilterfalse, imap, islice, izip, izip_longest,
    permutations, product, repeat, starmap, takewhile]
  itsdangerous: [BadData, BadHeader, BadPayload, BadSignature, BadTimeSignature, HMACAlgorithm,
    JSONWebSignatureSerializer, NoneAlgorithm, Serializer, SignatureExpired, Signer,
    SigningAlgorithm, TimedJSONWebSignatureSerializer, TimedSerializer, TimestampSigner,
    URLSafeSerializer, URLSafeSerializerMixin, URLSafeTimedSerializer, datetime, izip,
    text_type]
  ivar: [objc]
  izip: [itertools, heapq, itsdangerous]
  izip_longest: [itertools]
  jedi: [Interpreter, NotFoundError, Script]
  jinja2: [BaseLoader, BytecodeCache, ChoiceLoader, DebugUndefined, DictLoader, Environment,
    FileSystemBytecodeCache, FileSystemLoader, FunctionLoader, Markup, MemcachedBytecodeCache,
    ModuleLoader, PackageLoader, PrefixLoader, StrictUndefined, Template, TemplateAssertionError,
    TemplateError, TemplateNotFound, TemplateSyntaxError, TemplatesNotFound, Undefined,
    UndefinedError]
  joblib: [Logger, MemorizedResult, Memory, Parallel, PrintTime]
  jsonschema: [Draft3Validator, Draft4Validator, ErrorTree, FormatChecker, FormatError,
    RefResolutionError, RefResolver, SchemaError, ValidationError]
  kernel_arg_access_qualifier: [pyopencl]
  kernel_arg_address_qualifier: [pyopencl]
  kernel_arg_info: [pyopencl]
  kernel_info: [pyopencl]
  kernel_work_group_info: [pyopencl]
  keyword: [ast, codegen]
  leveldb: [LevelDB, LevelDBError, Snapshot, WriteBatch]
  local_memory: [opencl]
  lockfile: [AlreadyLocked, Error, FileLock, LockBase, LockError, LockFailed, LockFile,
    LockTimeout, NotLocked, NotMyLock, UnlockError]
  long: [numpy, psutil]
  longcomplex: [numpy, scipy]
  longdouble: [numpy, scipy]
  longfloat: [numpy, scipy]
  longlong: [numpy, scipy]
  main: [nose, unittest, unittest2]
  map_flags: [pyopencl]
  markupsafe: [EscapeFormatter, Mapping, Markup, text_type]
  matplotlib: [RcParams, Verbose, chain, rc_context]
  matrix: [numpy, scipy]
  mem_flags: [pyopencl]
  mem_info: [pyopencl]
  mem_layout: [opencl]
  mem_migration_flags: [pyopencl]
  mem_object_type: [pyopencl]
  memmap: [numpy, scipy]
  methodcaller: [operator]
  mftrack: [mftracker]
  mftracker: [mftrack]
  migrate_mem_object_flags_ext: [pyopencl]
  mock: [Base, CallableMixin, ClassType, MagicMixin, MagicMock, MagicProxy, Mock,
    NonCallableMagicMock, NonCallableMock, OldStyleClass, PropertyMock]
  mod: [ast, codegen]
  mutagen: [FileType, Metadata]
  ndarray: [numpy, scipy]
  ndenumerate: [numpy, scipy]
  ndgpuarray: [pygpu]
  ndindex: [numpy, scipy]
  nditer: [numpy, scipy]
  networkx: [DiGraph, Graph, GraphMLReader, GraphMLWriter, MultiDiGraph, MultiGraph,
    NetworkXAlgorithmError, NetworkXError, NetworkXException, NetworkXNoPath, NetworkXNotImplemented,
    NetworkXPointlessConcept, NetworkXTreewidthBoundExceeded, NetworkXUnbounded, NetworkXUnfeasible]
  nose: [DeprecatedTest, SkipTest, main, run_exit]
  nosuchclass_error: [objc]
  number: [numpy, scipy]
  numpy: [ComplexWarning, DataSource, MachAr, ModuleDeprecationWarning, PackageLoader,
    RankWarning, Tester, VisibleDeprecationWarning, bool, bool8, bool_, broadcast,
    busdaycalendar, byte, bytes_, cdouble, cfloat, character, chararray, clongdouble,
    clongfloat, complex, complex128, complex256, complex64, complex_, complexfloating,
    csingle, datetime64, double, dtype, errstate, finfo, flatiter, flexible, float,
    float128, float16, float32, float64, float_, floating, format_parser, generic,
    half, iinfo, inexact, int, int0, int16, int32, int64, int8, int_, intc, integer,
    intp, long, longcomplex, longdouble, longfloat, longlong, matrix, memmap, ndarray,
    ndenumerate, ndindex, nditer, number, object, object0, object_, poly1d, recarray,
    record, short, signedinteger, single, singlecomplex, str, str_, string0, string_,
    timedelta64, ubyte, ufunc, uint, uint0, uint16, uint32, uint64, uint8, uintc,
    uintp, ulonglong, unicode, unicode0, unicode_, unsignedinteger, ushort, vectorize,
    void, void0]
  objc: [BadPrototypeError, FSRef, FSSpec, LockError, NSDecimal, ObjCLazyModule, ObjCPointer,
    ProtocolError, PyObjCStrBridgeWarning, RevivedObjectiveCObjectWarning, UninitializedDeallocWarning,
    UnknownPointerError, WeakRef, array_property, autorelease_pool, bool_property,
    dict_property, formal_protocol, function, informal_protocol, internal_error, ivar,
    nosuchclass_error, objc_class, objc_meta_class, objc_object, object_lock, object_property,
    pyobjc_unicode, python_method, selector, set_property, super, varlist]
  objc_class: [objc]
  objc_meta_class: [objc]
  objc_object: [objc]
  object: [numpy]
  object0: [numpy, scipy]
  object2: [theano]
  object_: [numpy, scipy]
  object_lock: [objc]
  object_property: [objc]
  opencl: [CommandQueue, Context, ContextProperties, Device, DeviceMemoryView, Event,
    Image, ImageFormat, Kernel, MemoryObject, OpenCLException, Platform, Program,
    Queue, UserEvent, array_type, cl_char, cl_char16, cl_char2, cl_char4, cl_char8,
    cl_double, cl_double16, cl_double2, cl_double4, cl_double8, cl_float, cl_float16,
    cl_float2, cl_float4, cl_float8, cl_half, cl_int, cl_int16, cl_int2, cl_int4,
    cl_int8, cl_long, cl_long16, cl_long2, cl_long4, cl_long8, cl_short, cl_short16,
    cl_short2, cl_short4, cl_short8, cl_uchar, cl_uchar16, cl_uchar2, cl_uchar4, cl_uchar8,
    cl_uint, cl_uint16, cl_uint2, cl_uint4, cl_uint8, cl_ulong, cl_ulong16, cl_ulong2,
    cl_ulong4, cl_ulong8, cl_ushort, cl_ushort16, cl_ushort2, cl_ushort4, cl_ushort8,
    cl_vector, constant_memory, contextual_memory, global_memory, int_type, local_memory,
    mem_layout, typed_property]
  operator: [attrgetter, itemgetter, methodcaller, ast, codegen]
  ordereddict: [DictMixin, OrderedDict]
  os: [error, stat_result, statvfs_result]
  p_Py_UCS4: [Cython]
  p_Py_UNICODE: [Cython]
  p_Py_ssize_t: [Cython]
  p_bint: [Cython]
  p_char: [Cython]
  p_complex: [Cython]
  p_double: [Cython]
  p_doublecomplex: [Cython]
  p_float: [Cython]
  p_floatcomplex: [Cython]
  p_int: [Cython]
  p_long: [Cython]
  p_longdouble: [Cython]
  p_longdoublecomplex: [Cython]
  p_longlong: [Cython]
  p_short: [Cython]
  p_size_t: [Cython]
  p_void: [Cython]
  paMacCoreStreamInfo: [pyaudio]
  panda: [Panda, datetime, timedelta, tzinfo]
  pandas: [Categorical, DataFrame, DateOffset, DateRange, DatetimeIndex, ExcelFile,
    ExcelWriter, Expr, Float64Index, HDFStore, Index, Int64Index, LooseVersion, MultiIndex,
    Panel, Panel4D, Period, PeriodIndex, Series, SparseArray, SparseDataFrame, SparseList,
    SparsePanel, SparseSeries, SparseTimeSeries, Term, TimeGrouper, TimeSeries, Timestamp,
    WidePanel, datetime]
  paramiko: [Agent, AgentKey, AuthHandler, AuthenticationException, AutoAddPolicy,
    BadAuthenticationType, BadHostKeyException, BaseSFTP, BufferedFile, Channel, ChannelException,
    ChannelFile, DSSKey, ECDSAKey, HostKeys, InteractiveQuery, Message, MissingHostKeyPolicy,
    PKey, Packetizer, PasswordRequiredException, ProxyCommand, ProxyCommandFailure,
    RSAKey, RejectPolicy, SFTPAttributes, SFTPClient, SFTPError, SFTPFile, SFTPHandle,
    SFTPServer, SFTPServerInterface, SSHClient, SSHConfig, SSHException, SecurityOptions,
    ServerInterface, SubsystemHandler, Transport, WarningPolicy]
  partial: [functools, functools32]
  pathlib: [Path, PosixPath, PurePath, PurePosixPath, PureWindowsPath, Sequence, WindowsPath,
    attrgetter, basestring]
  permutations: [itertools]
  pip: [CommandError, ConfigOptionParser, FrozenRequirement, InsecureRequestWarning,
    InstallationError, PipError, UpdatingDefaultsHelpFormatter]
  plac: [Annotation, ArgumentParser, Interpreter, Monitor, ReadlineInput, TkMonitor,
    getfullargspec]
  platform_info: [pyopencl]
  poly1d: [numpy, scipy]
  posix: [stat_result, statvfs_result]
  pp_Py_UCS4: [Cython]
  pp_Py_UNICODE: [Cython]
  pp_Py_ssize_t: [Cython]
  pp_bint: [Cython]
  pp_char: [Cython]
  pp_complex: [Cython]
  pp_double: [Cython]
  pp_doublecomplex: [Cython]
  pp_float: [Cython]
  pp_floatcomplex: [Cython]
  pp_int: [Cython]
  pp_long: [Cython]
  pp_longdouble: [Cython]
  pp_longdoublecomplex: [Cython]
  pp_longlong: [Cython]
  pp_short: [Cython]
  pp_size_t: [Cython]
  pp_void: [Cython]
  ppp_Py_UCS4: [Cython]
  ppp_Py_UNICODE: [Cython]
  ppp_Py_ssize_t: [Cython]
  ppp_bint: [Cython]
  ppp_char: [Cython]
  ppp_complex: [Cython]
  ppp_double: [Cython]
  ppp_doublecomplex: [Cython]
  ppp_float: [Cython]
  ppp_floatcomplex: [Cython]
  ppp_int: [Cython]
  ppp_long: [Cython]
  ppp_longdouble: [Cython]
  ppp_longdoublecomplex: [Cython]
  ppp_longlong: [Cython]
  ppp_short: [Cython]
  ppp_size_t: [Cython]
  ppp_void: [Cython]
  product: [itertools]
  profiling_info: [pyopencl]
  program_binary_type: [pyopencl]
  program_build_info: [pyopencl]
  program_info: [pyopencl]
  program_kind: [pyopencl]
  psutil: [AccessDenied, Error, NoSuchProcess, Popen, Process, TimeoutExpired, long]
  pyasn: [defaultdict, pyasn, pyasn]
  pyaudio: [PaMacCoreStreamInfo, PyAudio, Stream, paMacCoreStreamInfo]
  pygments: [StringIO]
  pygpu: [ndgpuarray]
  pyobjc_unicode: [objc]
  pyopencl: [Buffer, CommandQueue, CompilerWarning, Context, Device, Error, Event,
    Image, ImageDescriptor, ImageFormat, Kernel, LocalMemory, LogicError, MemoryError,
    MemoryMap, MemoryObject, MemoryObjectHolder, MemoryPool, NannyEvent, Platform,
    PooledBuffer, Program, RuntimeError, Sampler, UserEvent, addressing_mode, affinity_domain_ext,
    channel_order, channel_type, command_execution_status, command_queue_info, command_queue_properties,
    command_type, context_info, context_properties, device_affinity_domain, device_exec_capabilities,
    device_fp_config, device_info, device_local_mem_type, device_mem_cache_type, device_partition_property,
    device_partition_property_ext, device_type, event_info, filter_mode, gl_context_info,
    image_info, kernel_arg_access_qualifier, kernel_arg_address_qualifier, kernel_arg_info,
    kernel_info, kernel_work_group_info, map_flags, mem_flags, mem_info, mem_migration_flags,
    mem_object_type, migrate_mem_object_flags_ext, platform_info, profiling_info,
    program_binary_type, program_build_info, program_info, program_kind, sampler_info,
    status_code]
  pyparsing: [And, CaselessKeyword, CaselessLiteral, CharsNotIn, Combine, Dict, Each,
    Empty, FollowedBy, Forward, GoToColumn, Group, Keyword, LineEnd, LineStart, Literal,
    MatchFirst, NoMatch, NotAny, OneOrMore, OnlyOnce, Optional, Or, ParseBaseException,
    ParseElementEnhance, ParseException, ParseExpression, ParseFatalException, ParseResults,
    ParseSyntaxException, ParserElement, QuotedString, RecursiveGrammarException,
    Regex, SkipTo, StringEnd, StringStart, Suppress, Token, TokenConverter, Upcase,
    White, Word, WordEnd, WordStart, ZeroOrMore, range, wkref]
  pyquery: [PyQuery]
  python_method: [objc]
  pytools: [CPyUserInterface, DependentDictionary, DictionaryWithDefault, FakeList,
    InfixOperator, MovedFunctionDeprecationWrapper, Norm, ProgressBar, Record, RecordWithoutPickling,
    Reference, StderrToStdout, Table, UniqueNameGenerator, VarianceAggregator, range,
    zip]
  pytz: [AmbiguousTimeError, InvalidTimeError, LazyDict, LazyList, LazySet, NonExistentTimeError,
    UnknownTimeZoneError]
  qtutils: [DisconnectContextManager, QSettingsWrapper, UiLoader]
  range: [pyparsing, pytools]
  rc_context: [matplotlib]
  re: [Scanner]
  recarray: [numpy, scipy]
  record: [numpy, scipy]
  repeat: [itertools]
  requests: [ConnectionError, HTTPError, NullHandler, PreparedRequest, Request, RequestException,
    Response, Session, Timeout, TooManyRedirects, URLRequired]
  rosdistro: [AptDistro, CachedManifestProvider, DevelDistro, Distribution, DistributionCache,
    DistributionFile, DocBuildFile, DocFile, Index, Release, ReleaseBuild, ReleaseBuildFile,
    ReleaseCache, ReleaseFile, RosDistro, SourceBuildFile, SourceFile]
  rospkg: [InvalidManifest, Manifest, ResourceNotFound, RosPack, RosStack]
  rsa: [DecryptionError, PrivateKey, PublicKey, VerificationError]
  run_exit: [nose]
  sampler_info: [pyopencl]
  scikits.audiolab: [Format, PyaudioException, PyaudioIOError, Sndfile, Tester, formatinfo,
    sndfile]
  scipy: [ComplexWarning, DataSource, MachAr, ModuleDeprecationWarning, PackageLoader,
    RankWarning, Tester, VisibleDeprecationWarning, bool8, bool_, broadcast, busdaycalendar,
    byte, bytes_, cdouble, cfloat, character, chararray, clongdouble, clongfloat,
    complex128, complex256, complex64, complex_, complexfloating, csingle, datetime64,
    double, dtype, errstate, finfo, flatiter, flexible, float128, float16, float32,
    float64, float_, floating, format_parser, generic, half, iinfo, inexact, int0,
    int16, int32, int64, int8, int_, intc, integer, intp, longcomplex, longdouble,
    longfloat, longlong, matrix, memmap, ndarray, ndenumerate, ndindex, nditer, number,
    object0, object_, poly1d, recarray, record, short, signedinteger, single, singlecomplex,
    str_, string0, string_, timedelta64, ubyte, ufunc, uint, uint0, uint16, uint32,
    uint64, uint8, uintc, uintp, ulonglong, unicode0, unicode_, unsignedinteger, ushort,
    vectorize, void, void0]
  selector: [objc]
  selenium: [selenium, selenium]
  serial: [FileLike, PosixPollSerial, PosixSerial, Serial, SerialBase, SerialException,
    SerialTimeoutException]
  set_property: [objc]
  setuptools: [Command, Distribution, Extension, Feature, PEP420PackageFinder, PackageFinder,
    Require, filterfalse]
  shedskin: [GlobalInfo]
  short: [numpy, scipy]
  signal: [ItimerError, gevent]
  signedinteger: [numpy, scipy]
  single: [numpy, scipy]
  singlecomplex: [numpy, scipy]
  six: [BytesIO, Iterator, Module_six_moves_urllib, Module_six_moves_urllib_error,
    Module_six_moves_urllib_parse, Module_six_moves_urllib_request, Module_six_moves_urllib_response,
    Module_six_moves_urllib_robotparser, MovedAttribute, MovedModule, StringIO, binary_type,
    text_type]
  sleekxmpp: [BaseXMPP, Callback, ClientXMPP, ComponentXMPP, ElementBase, InvalidJID,
    Iq, MatchMany, MatchXMLMask, MatchXPath, MatcherId, Message, Presence, RestartStream,
    StanzaPath, Waiter, XMLCallback, XMLStream, XMLWaiter]
  slice: [ast, codegen]
  sndfile: [scikits.audiolab]
  starmap: [itertools]
  stat_result: [os, posix]
  status_code: [pyopencl]
  statvfs_result: [os, posix]
  stem: [CircuitExtensionFailed, ControllerError, InvalidArguments, InvalidRequest,
    OperationFailed, ProtocolError, SocketClosed, SocketError, UnsatisfiableRequest]
  stmt: [ast, codegen]
  str: [numpy]
  str_: [numpy, scipy]
  string: [Formatter, Template, atof_error, atoi_error, atol_error, index_error]
  string0: [numpy, scipy]
  string_: [numpy, scipy]
  super: [objc]
  takewhile: [itertools]
  text_type: [six, itsdangerous, markupsafe]
  theanets: [Autoencoder, Classifier, Experiment, Network, Regressor]
  theano: [Apply, CLinker, Component, ComponentDict, ComponentList, Composite, Constant,
    Container, DualLinker, External, FancyModule, FunctionGraph, FunctionMaker, Generic,
    In, InconsistencyError, Linker, LocalLinker, Member, Method, Mode, Module, Op,
    OpFromGraph, OpWiseCLinker, OpenMPOp, OrderedUpdates, Out, Param, PerformLinker,
    ProfileMode, ProfileStats, SymbolicInput, SymbolicOutput, Type, Variable, object2]
  thread: [LockType]
  timedelta: [panda]
  timedelta64: [numpy, scipy]
  tokenize: [StopTokenizing, TokenError, Untokenizer, chain]
  tox: [exception]
  typed_property: [opencl]
  typedef: [Cython]
  types: [BooleanType, BufferType, BuiltinFunctionType, BuiltinMethodType, ClassType,
    CodeType, ComplexType, DictProxyType, DictType, DictionaryType, EllipsisType,
    FileType, FloatType, FrameType, FunctionType, GeneratorType, GetSetDescriptorType,
    InstanceType, IntType, LambdaType, ListType, LongType, MemberDescriptorType, MethodType,
    ModuleType, NoneType, NotImplementedType, ObjectType, SliceType, StringType, TracebackType,
    TupleType, TypeType, UnboundMethodType, UnicodeType, XRangeType]
  tzinfo: [panda]
  ubyte: [numpy, scipy]
  ufunc: [numpy, scipy]
  uint: [numpy, scipy]
  uint0: [numpy, scipy]
  uint16: [numpy, scipy]
  uint32: [numpy, scipy]
  uint64: [numpy, scipy]
  uint8: [numpy, scipy]
  uintc: [numpy, scipy]
  uintp: [numpy, scipy]
  ulonglong: [numpy, scipy]
  unaryop: [ast, codegen]
  unicode: [numpy]
  unicode0: [numpy, scipy]
  unicode_: [numpy, scipy]
  unirest: [StringIO, UnirestResponse]
  unittest: [BaseTestSuite, FunctionTestCase, SkipTest, TestCase, TestLoader, TestProgram,
    TestResult, TestSuite, TextTestResult, TextTestRunner, main]
  unittest2: [BaseTestSuite, FunctionTestCase, SkipTest, TestCase, TestLoader, TestProgram,
    TestResult, TestSuite, TextTestResult, TextTestRunner, main]
  unsignedinteger: [numpy, scipy]
  ushort: [numpy, scipy]
  varlist: [objc]
  vcstools: [BzrClient, GitClient, HgClient, SvnClient, TarClient, VCSClient, VcsClient]
  vectorize: [numpy, scipy]
  virtualenv: [ConfigOptionParser, Logger, UpdatingDefaultsHelpFormatter, fileview]
  void: [numpy, scipy]
  void0: [numpy, scipy]
  warnings: [WarningMessage, catch_warnings]
  werkzeug: [Aborter, Accept, AcceptMixin, ArgumentValidationError, Authorization,
    AuthorizationMixin, BaseRequest, BaseResponse, CallbackDict, CharsetAccept, Client,
    ClosingIterator, CombinedMultiDict, CommonRequestDescriptorsMixin, CommonResponseDescriptorsMixin,
    DebuggedApplication, DispatcherMiddleware, ETagRequestMixin, ETagResponseMixin,
    ETags, EnvironBuilder, EnvironHeaders, FileMultiDict, FileStorage, FileWrapper,
    HTMLBuilder, HeaderSet, Headers, Href, ImmutableDict, ImmutableList, ImmutableMultiDict,
    ImmutableOrderedMultiDict, ImmutableTypeConversionDict, LanguageAccept, LimitedStream,
    Local, LocalManager, LocalProxy, LocalStack, MIMEAccept, MultiDict, OrderedMultiDict,
    Request, RequestCacheControl, Response, ResponseCacheControl, ResponseStreamMixin,
    SharedDataMiddleware, TypeConversionDict, UserAgent, UserAgentMixin, WWWAuthenticate,
    WWWAuthenticateMixin, cached_property, environ_property, header_property]
  wkref: [pyparsing]
  word2vec: [WordClusters, WordVectors]
  yaml: [AliasEvent, AliasToken, AnchorToken, BaseDumper, BaseLoader, BlockEndToken,
    BlockEntryToken, BlockMappingStartToken, BlockSequenceStartToken, CBaseDumper,
    CBaseLoader, CDumper, CLoader, CSafeDumper, CSafeLoader, CollectionEndEvent, CollectionNode,
    CollectionStartEvent, DirectiveToken, DocumentEndEvent, DocumentEndToken, DocumentStartEvent,
    DocumentStartToken, Dumper, Event, FlowEntryToken, FlowMappingEndToken, FlowMappingStartToken,
    FlowSequenceEndToken, FlowSequenceStartToken, KeyToken, Loader, MappingEndEvent,
    MappingNode, MappingStartEvent, Mark, MarkedYAMLError, Node, NodeEvent, SafeDumper,
    SafeLoader, ScalarEvent, ScalarNode, ScalarToken, SequenceEndEvent, SequenceNode,
    SequenceStartEvent, StreamEndEvent, StreamEndToken, StreamStartEvent, StreamStartToken,
    TagToken, Token, ValueToken, YAMLError, YAMLObject, YAMLObjectMetaclass]
  zip: [pytools]
  zipimport: [ZipImportError, zipimporter]
  zipimporter: [zipimport]
  zmq: [Again, Context, ContextTerminated, Frame, Message, MessageTracker, NotDone,
    Poller, Socket, Stopwatch, ZMQBaseError, ZMQBindError, ZMQError, ZMQVersionError]
