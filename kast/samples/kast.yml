# ruby++ better blocks + lambdas !!!
# ruby+ jruby better, class extensions
# ruby- less modules, more beautiful language => less need for angle!
# ruby--: NO types!!, no annotations!
# python ++: more modules, ironpython ok!, type hints (py3), annotations, TO NATIVE (sometimes), Ast better(!!)
# python - annoying (self),:,() neccessary + DANGEROUS!! (ok if generated?), NO class extensions! (ok with 'macros' / subclass construction (?))
# python --- explicit global/class(self) variable scope nightmare!! lambdas + block variable scope !!!!! 'nonlocal' keyword :(
class:
  name: test
  class_method:
    name: fun
    args: [x,y]
    body:
      assign:
        var: z
        value:
          call:
            object: x
            method: add
            args: y
      return:
        value: z

call:
  object: test
  method: fun
  args:
    num: 3
    num: 4







#//<class name="test">
#//<def name="fun" args="[x,y]">
#//<set var="z">
#//<call object='x' method='power' argument='y'/>
#//<return value="z"/>
#//</set>
#//</def>
#//</class>
